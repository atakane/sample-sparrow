/* 
		WARNING 
		Auto generated file. 
		Do not modify its contents.
*/

const extend = require('js-base/core/extend');
const ImageView = require('sf-core/ui/imageview');
const ImageFillType = require('sf-core/ui/imagefilltype');
const Image = require('sf-core/ui/image');
const FlexLayout = require('sf-core/ui/flexlayout');
const Label = require('sf-core/ui/label');
const Color = require('sf-core/ui/color');
const TextAlignment = require('sf-core/ui/textalignment');
const Font = require('sf-core/ui/font');



const getCombinedStyle = require("library/styler-builder").getCombinedStyle;

const CustomHeaderBar = extend(FlexLayout)(
	//constructor
	function(_super, props) {
		// initalizes super class for this component scope
		_super(this, props);

		const leftImageStyle = getCombinedStyle(".imageView", {
			height: 30,
			width: 30,
			imageFillType: ImageFillType.ASPECTFIT,
			image: null,
			top: null,
			alignSelf: FlexLayout.AlignSelf.AUTO
		});
		var leftImage = new ImageView(leftImageStyle);
		this.addChild(leftImage);
		this.leftImage = leftImage;

		const headerTitleStyle = getCombinedStyle(".label", {
			height: null,
			width: null,
			textColor: Color.create(255, 255, 255, 255),
			textAlignment: TextAlignment.MIDCENTER,
			marginRight: 50,
			marginLeft: 20,
			text: "Label",
			flexGrow: 1,
			alignSelf: FlexLayout.AlignSelf.STRETCH,
			font: Font.create("Arial", 18, Font.BOLD)
		});
		var headerTitle = new Label(headerTitleStyle);
		if(headerTitleStyle.scrollEnabled === false)
			headerTitle.ios && (headerTitle.ios.scrollEnabled = false);
		this.addChild(headerTitle);
		this.headerTitle = headerTitle;

		const rightContainerStyle = getCombinedStyle(".flexLayout", {
			width: 30,
			height: 30,
			backgroundColor: Color.create(0, 255, 255, 255),
			marginRight: null,
			right: 5,
			left: null,
			top: 7,
			visible: true,
			paddingTop: null,
			positionType: FlexLayout.PositionType.ABSOLUTE
		});
		var rightContainer = new FlexLayout(rightContainerStyle);
		this.addChild(rightContainer);
		this.rightContainer = rightContainer;

		const rightImageStyle = getCombinedStyle(".imageView", {
			width: 30,
			height: 30,
			imageFillType: ImageFillType.ASPECTFIT,
			image: null,
			flexGrow: null,
			alignSelf: FlexLayout.AlignSelf.STRETCH,
			positionType: FlexLayout.PositionType.RELATIVE
		});
		var rightImage = new ImageView(rightImageStyle);
		rightContainer.addChild(rightImage);
		this.rightImage = rightImage;

		const countStyle = getCombinedStyle(".label", {
			width: 25,
			height: 25,
			textColor: Color.create(255, 255, 255, 255),
			text: "",
			textAlignment: TextAlignment.MIDCENTER,
			marginBottom: null,
			left: 7,
			right: 0,
			top: 0,
			bottom: 5,
			positionType: FlexLayout.PositionType.ABSOLUTE,
			font: Font.create("Arial", 10, Font.NORMAL)
		});
		var count = new Label(countStyle);
		if(countStyle.scrollEnabled === false)
			count.ios && (count.ios.scrollEnabled = false);
		rightContainer.addChild(count);
		this.count = count;

		//assign the children to customHeaderBar 
		this.children = Object.assign({}, {
			leftImage: leftImage,
			headerTitle: headerTitle,
			rightContainer: rightContainer
		});
		
		//assign the children of rightContainer
		rightContainer.children = Object.assign({}, {
			rightImage: rightImage,
			count: count
		});
		
	});

CustomHeaderBar.defaults = getCombinedStyle(".flexLayout", {
	width: 371.2,
	height: 44,
	backgroundColor: Color.create(0, 255, 255, 255),
	paddingLeft: 5,
	paddingTop: 5,
	paddingRight: 5,
	paddingBottom: 5,
	flexDirection: FlexLayout.FlexDirection.ROW,
	justifyContent: FlexLayout.JustifyContent.FLEX_START,
	alignContent: FlexLayout.AlignContent.CENTER,
	alignItems: FlexLayout.AlignItems.CENTER
});

module && (module.exports = CustomHeaderBar);