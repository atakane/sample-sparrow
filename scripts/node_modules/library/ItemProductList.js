/* 
		WARNING 
		Auto generated file. 
		Do not modify its contents.
*/

const extend = require('js-base/core/extend');
const FlexLayout = require('sf-core/ui/flexlayout');
const Color = require('sf-core/ui/color');
const Label = require('sf-core/ui/label');
const TextAlignment = require('sf-core/ui/textalignment');
const ImageView = require('sf-core/ui/imageview');
const ImageFillType = require('sf-core/ui/imagefilltype');

const HorizontalDivider = require("../../components/HorizontalDivider");
const LoaderContainer = require("../../components/LoaderContainer");

const getCombinedStyle = require("library/styler-builder").getCombinedStyle;

const ItemProductList = extend(FlexLayout)(
	//constructor
	function(_super, props) {
		// initalizes super class for this component scope
		_super(this, props);

		const thmbContainerStyle = getCombinedStyle(".flexLayout", {
			height: 173,
			width: null,
			backgroundColor: Color.create(0, 255, 255, 255),
			id: 1002
		});
		var thmbContainer = new FlexLayout(thmbContainerStyle);
		this.addChild(thmbContainer);
		this.thmbContainer = thmbContainer;

		const dvdStyle = getCombinedStyle(".flexLayout", {
			left: 0,
			top: 0,
			width: null,
			height: 1,
			backgroundColor: Color.create(255, 0, 0, 0),
			alpha: 0.1,
			id: 1001,
			flexGrow: null,
			positionType: FlexLayout.PositionType.RELATIVE
		});
		var dvd = new HorizontalDivider(dvdStyle, "itemProductList");
		this.addChild(dvd);
		
		const infoContainerStyle = getCombinedStyle(".flexLayout", {
			width: null,
			height: 60,
			backgroundColor: Color.create(0, 255, 255, 255),
			id: 1003,
			alignItems: FlexLayout.AlignItems.AUTO,
			justifyContent: FlexLayout.JustifyContent.CENTER
		});
		var infoContainer = new FlexLayout(infoContainerStyle);
		this.addChild(infoContainer);
		this.infoContainer = infoContainer;

		const titleStyle = getCombinedStyle(".label", {
			text: "Tortoise Glass",
			width: null,
			height: 20,
			textAlignment: TextAlignment.MIDCENTER,
			marginLeft: 10,
			marginRight: 10,
			id: 10032
		});
		var title = new Label(titleStyle);
		infoContainer.addChild(title);
		this.title = title;

		const loaderStyle = getCombinedStyle(".flexLayout", {
			left: 0,
			top: 0,
			width: null,
			height: 170,
			backgroundColor: Color.create(0, 255, 255, 255),
			id: 1004,
			right: 0,
			alignItems: FlexLayout.AlignItems.CENTER,
			justifyContent: FlexLayout.JustifyContent.CENTER,
			positionType: FlexLayout.PositionType.ABSOLUTE
		});
		var loader = new LoaderContainer(loaderStyle, "itemProductList");
		thmbContainer.addChild(loader);
		this.loader = loader;

		const priceStyle = getCombinedStyle(".label", {
			text: "$25",
			width: null,
			height: 20,
			textAlignment: TextAlignment.MIDCENTER,
			alpha: 0.7,
			backgroundColor: Color.create(0, 214, 35, 35),
			id: 10031,
			alignSelf: FlexLayout.AlignSelf.STRETCH
		});
		var price = new Label(priceStyle);
		infoContainer.addChild(price);
		this.price = price;

		const thumbStyle = getCombinedStyle(".imageView", {
			width: null,
			height: null,
			imageFillType: ImageFillType.ASPECTFIT,
			id: 10022,
			flexGrow: 1
		});
		var thumb = new ImageView(thumbStyle);
		thmbContainer.addChild(thumb);
		this.thumb = thumb;

		//assign the children to itemProductList 
		this.children = Object.assign({}, {
			thmbContainer: thmbContainer,
			dvd: dvd,
			infoContainer: infoContainer
		});
		
		//assign the children of thmbContainer
		thmbContainer.children = Object.assign({}, {
			loader: loader,
			thumb: thumb
		});
		
		//assign the children of infoContainer
		infoContainer.children = Object.assign({}, {
			title: title,
			price: price
		});
		
	});

ItemProductList.defaults = getCombinedStyle(".flexLayout", {
	width: 170,
	height: 230,
	borderRadius: 5,
	borderWidth: null,
	backgroundColor: Color.create(255, 255, 255, 255),
	id: 100
});

module && (module.exports = ItemProductList);