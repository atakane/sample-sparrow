/* 
		WARNING 
		Auto generated file. 
		Do not modify its contents.
*/

const extend = require('js-base/core/extend');
const FlexLayout = require('sf-core/ui/flexlayout');
const Color = require('sf-core/ui/color');
const Label = require('sf-core/ui/label');
const TextAlignment = require('sf-core/ui/textalignment');
const Font = require('sf-core/ui/font');

const ItemSmallThumb = require("../../components/ItemSmallThumb");
const HorizontalDivider = require("../../components/HorizontalDivider");

const getCombinedStyle = require("library/styler-builder").getCombinedStyle;

const ItemCart = extend(FlexLayout)(
	//constructor
	function(_super, props) {
		// initalizes super class for this component scope
		_super(this, props);

		const productImageStyle = getCombinedStyle(".flexLayout .flexLayout-smallThumb.inactive", {
			left: 0,
			top: 0,
			width: 75,
			height: 75,
			borderColor: Color.create(51, 0, 0, 0),
			borderWidth: 0.5,
			id: 100,
			positionType: FlexLayout.PositionType.RELATIVE
		});
		var productImage = new ItemSmallThumb(productImageStyle, "itemCart");
		this.addChild(productImage);
		this.productImage = productImage;

		const flexlayout6Style = getCombinedStyle(".flexLayout", {
			height: 75,
			width: null,
			marginLeft: 10,
			backgroundColor: Color.create(0, 255, 255, 255),
			id: 101,
			marginRight: 5,
			flexGrow: 1
		});
		var flexlayout6 = new FlexLayout(flexlayout6Style);
		this.addChild(flexlayout6);
		this.flexlayout6 = flexlayout6;

		const flexlayout7Style = getCombinedStyle(".flexLayout", {
			width: 30,
			height: 75,
			marginRight: 1,
			borderWidth: 0.5,
			borderRadius: 5,
			borderColor: Color.create(51, 0, 0, 0),
			backgroundColor: Color.create(0, 255, 255, 255),
			id: 102
		});
		var flexlayout7 = new FlexLayout(flexlayout7Style);
		this.addChild(flexlayout7);
		this.flexlayout7 = flexlayout7;

		const bottom_divStyle = getCombinedStyle(".flexLayout", {
			left: 0,
			top: null,
			width: null,
			height: 1,
			backgroundColor: Color.create(255, 0, 0, 0),
			alpha: 0.1,
			right: 0,
			bottom: 0,
			id: 104,
			flexGrow: 1,
			positionType: FlexLayout.PositionType.ABSOLUTE
		});
		var bottom_div = new HorizontalDivider(bottom_divStyle, "itemCart");
		this.addChild(bottom_div);
		
		const btnPlusStyle = getCombinedStyle(".label", {
			width: null,
			height: 25,
			text: "+",
			textAlignment: TextAlignment.MIDCENTER,
			textColor: Color.create(51, 0, 0, 0),
			id: 1021,
			font: Font.create("Verdana", 16, Font.NORMAL)
		});
		var btnPlus = new Label(btnPlusStyle);
		if(btnPlusStyle.scrollEnabled === false)
			btnPlus.ios && (btnPlus.ios.scrollEnabled = false);
		flexlayout7.addChild(btnPlus);
		this.btnPlus = btnPlus;

		const productTitleStyle = getCombinedStyle(".label", {
			height: null,
			width: null,
			textAlignment: TextAlignment.BOTTOMLEFT,
			text: "Label",
			multiline: false,
			id: 1011,
			flexGrow: 1
		});
		var productTitle = new Label(productTitleStyle);
		if(productTitleStyle.scrollEnabled === false)
			productTitle.ios && (productTitle.ios.scrollEnabled = false);
		flexlayout6.addChild(productTitle);
		this.productTitle = productTitle;

		const counterStyle = getCombinedStyle(".label", {
			width: null,
			height: 25,
			text: "0",
			textAlignment: TextAlignment.MIDCENTER,
			textColor: Color.create(255, 0, 0, 0),
			id: 1022,
			font: Font.create("Arial", 14, Font.NORMAL)
		});
		var counter = new Label(counterStyle);
		if(counterStyle.scrollEnabled === false)
			counter.ios && (counter.ios.scrollEnabled = false);
		flexlayout7.addChild(counter);
		this.counter = counter;

		const productPriceStyle = getCombinedStyle(".label", {
			height: null,
			width: null,
			alpha: 0.5,
			text: "$25",
			textAlignment: TextAlignment.MIDLEFT,
			id: 1012,
			flexGrow: 1,
			font: Font.create("Arial", 12, Font.NORMAL)
		});
		var productPrice = new Label(productPriceStyle);
		if(productPriceStyle.scrollEnabled === false)
			productPrice.ios && (productPrice.ios.scrollEnabled = false);
		flexlayout6.addChild(productPrice);
		this.productPrice = productPrice;

		const btnMinusStyle = getCombinedStyle(".label", {
			width: null,
			height: 25,
			text: "-",
			textAlignment: TextAlignment.MIDCENTER,
			textColor: Color.create(51, 0, 0, 0),
			id: 1023,
			font: Font.create("Verdana", 16, Font.NORMAL)
		});
		var btnMinus = new Label(btnMinusStyle);
		if(btnMinusStyle.scrollEnabled === false)
			btnMinus.ios && (btnMinus.ios.scrollEnabled = false);
		flexlayout7.addChild(btnMinus);
		this.btnMinus = btnMinus;

		//assign the children to itemCart 
		this.children = Object.assign({}, {
			productImage: productImage,
			flexlayout6: flexlayout6,
			flexlayout7: flexlayout7,
			bottom_div: bottom_div
		});
		
		//assign the children of flexlayout6
		flexlayout6.children = Object.assign({}, {
			productTitle: productTitle,
			productPrice: productPrice
		});
		
		//assign the children of flexlayout7
		flexlayout7.children = Object.assign({}, {
			btnPlus: btnPlus,
			counter: counter,
			btnMinus: btnMinus
		});
		
	});

ItemCart.defaults = getCombinedStyle(".flexLayout", {
	width: 354,
	height: 100,
	backgroundColor: Color.create(0, 255, 255, 255),
	flexDirection: FlexLayout.FlexDirection.ROW,
	justifyContent: FlexLayout.JustifyContent.CENTER,
	alignContent: FlexLayout.AlignContent.CENTER,
	alignItems: FlexLayout.AlignItems.CENTER
});

module && (module.exports = ItemCart);