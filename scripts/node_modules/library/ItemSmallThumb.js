/* 
		WARNING 
		Auto generated file. 
		Do not modify its contents.
*/

const extend = require('js-base/core/extend');
const FlexLayout = require('sf-core/ui/flexlayout');
const Color = require('sf-core/ui/color');
const ImageView = require('sf-core/ui/imageview');
const ImageFillType = require('sf-core/ui/imagefilltype');
const ActivityIndicator = require('sf-core/ui/activityindicator');



const getCombinedStyle = require("library/styler-builder").getCombinedStyle;

const ItemSmallThumb = extend(FlexLayout)(
	//constructor
	function(_super, props) {
		// initalizes super class for this component scope
		_super(this, props);

		const flexlayout1Style = getCombinedStyle(".flexLayout", {
			width: null,
			height: null,
			left: 0,
			right: 0,
			top: 0,
			bottom: 0,
			backgroundColor: Color.create(0, 255, 255, 255),
			positionType: FlexLayout.PositionType.ABSOLUTE,
			alignItems: FlexLayout.AlignItems.CENTER,
			justifyContent: FlexLayout.JustifyContent.CENTER
		});
		var flexlayout1 = new FlexLayout(flexlayout1Style);
		this.addChild(flexlayout1);
		
		const imageSmallStyle = getCombinedStyle(".imageView", {
			width: null,
			height: null,
			imageFillType: ImageFillType.ASPECTFIT,
			visible: true,
			flexGrow: 1
		});
		var imageSmall = new ImageView(imageSmallStyle);
		this.addChild(imageSmall);
		this.imageSmall = imageSmall;

		const activityindicator2Style = getCombinedStyle(".activityIndicator", {
			backgroundColor: Color.create(0, 255, 255, 255),
			width: 20,
			height: 20,
			minWidth: 21,
			minHeight: 21
		});
		var activityindicator2 = new ActivityIndicator(activityindicator2Style);
		flexlayout1.addChild(activityindicator2);
		
		//assign the children to itemSmallThumb 
		this.children = Object.assign({}, {
			flexlayout1: flexlayout1,
			imageSmall: imageSmall
		});
		
		//assign the children of flexlayout1
		flexlayout1.children = Object.assign({}, {
			activityindicator2: activityindicator2
		});
		
	});

ItemSmallThumb.defaults = getCombinedStyle(".flexLayout .flexLayout-smallThumb.inactive", {
	width: 42,
	height: 40
});

module && (module.exports = ItemSmallThumb);