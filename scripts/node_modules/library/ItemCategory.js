/* 
		WARNING 
		Auto generated file. 
		Do not modify its contents.
*/

const extend = require('js-base/core/extend');
const FlexLayout = require('sf-core/ui/flexlayout');
const Color = require('sf-core/ui/color');
const ImageView = require('sf-core/ui/imageview');
const ImageFillType = require('sf-core/ui/imagefilltype');
const Label = require('sf-core/ui/label');

const LoaderContainer = require("../../components/LoaderContainer");

const getCombinedStyle = require("library/styler-builder").getCombinedStyle;

const ItemCategory = extend(FlexLayout)(
	//constructor
	function(_super, props) {
		// initalizes super class for this component scope
		_super(this, props);

		const flexlayout8Style = getCombinedStyle(".flexLayout", {
			left: 0,
			top: 0,
			width: null,
			height: null,
			backgroundColor: Color.create(0, 255, 255, 255),
			right: 0,
			bottom: 0,
			id: 1003,
			alignItems: FlexLayout.AlignItems.CENTER,
			justifyContent: FlexLayout.JustifyContent.CENTER,
			positionType: FlexLayout.PositionType.ABSOLUTE
		});
		var flexlayout8 = new LoaderContainer(flexlayout8Style, "itemCategory");
		this.addChild(flexlayout8);
		this.flexlayout8 = flexlayout8;

		const categoryImageStyle = getCombinedStyle(".imageView", {
			width: null,
			height: null,
			left: 5,
			right: 5,
			top: 0,
			bottom: 0,
			id: 1002,
			imageFillType: ImageFillType.STRETCH,
			backgroundColor: Color.create(0, 0, 0, 0),
			marginLeft: null,
			marginRight: null,
			positionType: FlexLayout.PositionType.ABSOLUTE,
			alignSelf: FlexLayout.AlignSelf.AUTO
		});
		var categoryImage = new ImageView(categoryImageStyle);
		this.addChild(categoryImage);
		this.categoryImage = categoryImage;

		const categoryTitleStyle = getCombinedStyle(".label .label-categoryItem", {
			bottom: 20,
			height: 40,
			left: 0,
			top: 110,
			width: 150,
			text: "CLOTHING",
			id: 1001,
			marginLeft: 5,
			positionType: FlexLayout.PositionType.ABSOLUTE
		});
		var categoryTitle = new Label(categoryTitleStyle);
		if(categoryTitleStyle.scrollEnabled === false)
			categoryTitle.ios && (categoryTitle.ios.scrollEnabled = false);
		this.addChild(categoryTitle);
		this.categoryTitle = categoryTitle;

		//assign the children to itemCategory 
		this.children = Object.assign({}, {
			flexlayout8: flexlayout8,
			categoryImage: categoryImage,
			categoryTitle: categoryTitle
		});
		
	});

ItemCategory.defaults = getCombinedStyle(".flexLayout", {
	width: 307,
	height: 170,
	backgroundColor: Color.create(0, 255, 255, 255),
	id: 100
});

module && (module.exports = ItemCategory);